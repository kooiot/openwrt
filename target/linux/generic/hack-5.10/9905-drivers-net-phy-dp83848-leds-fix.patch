--- a/drivers/net/phy/dp83848.c	2021-12-29 18:25:06.763761361 +0800
+++ b/drivers/net/phy/dp83848.c	2021-12-29 18:31:02.093427416 +0800
@@ -6,6 +6,8 @@
  */
 
 #include <linux/module.h>
+#include <linux/mii.h>
+#include <linux/delay.h>
 #include <linux/phy.h>
 
 #define TI_DP83848C_PHY_ID		0x20005ca0
@@ -16,6 +18,7 @@
 /* Registers */
 #define DP83848_MICR			0x11 /* MII Interrupt Control Register */
 #define DP83848_MISR			0x12 /* MII Interrupt Status Register */
+#define DP83848_PHYCR			0x19 /* PHY Control Register */
 
 /* MICR Register Fields */
 #define DP83848_MICR_INT_OE		BIT(0) /* Interrupt Output Enable */
@@ -31,6 +34,9 @@
 #define DP83848_MISR_ED_INT_EN		BIT(6) /* Energy detect */
 #define DP83848_MISR_LQM_INT_EN		BIT(7) /* Link Quality Monitor */
 
+/* PHYCR Register Fields */
+#define DP83848_PHYCR_LED_CNFG		BIT(5) /* LED Configuration */
+
 #define DP83848_INT_EN_MASK		\
 	(DP83848_MISR_ANC_INT_EN |	\
 	 DP83848_MISR_DUP_INT_EN |	\
@@ -66,6 +72,36 @@
 	return phy_write(phydev, DP83848_MICR, control);
 }
 
+static int ns_dp83848_config_init(struct phy_device *phydev)
+{
+	int val;
+
+	msleep(1);
+
+	val = phy_read(phydev, MII_PHYSID1) << 16;
+	val |= phy_read(phydev, MII_PHYSID2);
+	phydev_info(phydev, "%s: phy_id: %x", __func__, val);
+	if (val != NS_DP83848C_PHY_ID)
+		return 0;
+
+	val = phy_read(phydev, DP83848_PHYCR);
+	if (val & DP83848_PHYCR_LED_CNFG) {
+		phydev_info(phydev, "%s: fix led value: %x", __func__, val);
+		val &= ~DP83848_PHYCR_LED_CNFG;
+		msleep(10);
+		phy_write(phydev, DP83848_PHYCR, val);
+		msleep(10);
+		phy_write(phydev, DP83848_PHYCR, val);
+		msleep(10);
+		val = phy_read(phydev, DP83848_PHYCR);
+		phydev_info(phydev, "%s: fixed led value: %x", __func__, val);
+	} else {
+		phydev_info(phydev, "%s: led value: %x", __func__, val);
+	}
+
+	return 0;
+}
+
 static int dp83848_config_init(struct phy_device *phydev)
 {
 	int val;
@@ -95,6 +131,7 @@
 		.phy_id_mask	= 0xfffffff0,			\
 		.name		= _name,			\
 		/* PHY_BASIC_FEATURES */			\
+		.features = PHY_BASIC_FEATURES,		\
 								\
 		.soft_reset	= genphy_soft_reset,		\
 		.config_init	= _config_init,			\
@@ -110,7 +147,7 @@
 	DP83848_PHY_DRIVER(TI_DP83848C_PHY_ID, "TI DP83848C 10/100 Mbps PHY",
 			   NULL),
 	DP83848_PHY_DRIVER(NS_DP83848C_PHY_ID, "NS DP83848C 10/100 Mbps PHY",
-			   NULL),
+			   ns_dp83848_config_init),
 	DP83848_PHY_DRIVER(TI_DP83620_PHY_ID, "TI DP83620 10/100 Mbps PHY",
 			   dp83848_config_init),
 	DP83848_PHY_DRIVER(TLK10X_PHY_ID, "TI TLK10X 10/100 Mbps PHY",
