--- a/drivers/gpu/drm/sun4i/sun4i_drv.c
+++ b/drivers/gpu/drm/sun4i/sun4i_drv.c
@@ -177,6 +177,13 @@
 	return of_device_is_compatible(node, "hdmi-connector");
 }
 
+static bool sun4i_drv_node_is_mipi_dsi(struct device_node *node)
+{
+	return of_device_is_compatible(node, "allwinner,sun8i-r40-mipi-dsi") ||
+		of_device_is_compatible(node, "allwinner,sun50i-a64-mipi-dsi") ||
+		of_device_is_compatible(node, "allwinner,sun6i-a31-mipi-dsi");
+}
+
 static bool sun4i_drv_node_is_frontend(struct device_node *node)
 {
 	return of_device_is_compatible(node, "allwinner,sun4i-a10-display-frontend") ||
@@ -346,6 +353,12 @@
 		return 0;
 
 	/*
+	 * MIPI-DSI will be the last nodes in our pipeline
+	 */
+	if (sun4i_drv_node_is_mipi_dsi(node))
+		return 0;
+
+	/*
 	 * If the device is either just a regular device, or an
 	 * enabled frontend supported by the driver, we add it to our
 	 * component list.
--- a/arch/arm/boot/dts/sun8i-r40.dtsi
+++ b/arch/arm/boot/dts/sun8i-r40.dtsi
@@ -1317,7 +1317,7 @@
 			compatible = "allwinner,sun8i-r40-hdmi-phy";
 			reg = <0x01ef0000 0x10000>;
 			clocks = <&ccu CLK_BUS_HDMI1>, <&ccu CLK_HDMI_SLOW>,
-				 <&ccu 7>, <&ccu 16>;
+				 <&ccu CLK_PLL_VIDEO0>, <&ccu CLK_PLL_VIDEO1>;
 			clock-names = "bus", "mod", "pll-0", "pll-1";
 			resets = <&ccu RST_BUS_HDMI0>;
 			reset-names = "phy";
--- a/arch/arm/boot/dts/sun8i-r40-bananapi-m2-ultra.dts
+++ b/arch/arm/boot/dts/sun8i-r40-bananapi-m2-ultra.dts
@@ -52,6 +52,7 @@
 	compatible = "sinovoip,bpi-m2-ultra", "allwinner,sun8i-r40";
 
 	aliases {
+		display0 = &hdmi;
 		ethernet0 = &gmac;
 		serial0 = &uart0;
 		mmc0 = &mmc0;
@@ -59,6 +60,21 @@
 		mmc2 = &mmc1;
 	};
 
+	reserved-memory {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges;
+
+		/* global autoconfigured region for contiguous allocations */
+		linux,cma {
+			compatible = "shared-dma-pool";
+			reusable;
+			size = <0x2000000>; // 32M
+			alignment = <0x2000>;
+			linux,cma-default;
+		};
+	};
+
 	backlight: backlight {
 		compatible = "pwm-backlight";
 		pwms = <&pwm 0 50000 PWM_POLARITY_INVERTED>;
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.c
@@ -2179,7 +2179,7 @@
 					     connector);
 
 	mutex_lock(&hdmi->mutex);
-	hdmi->force = DRM_FORCE_UNSPECIFIED;
+	hdmi->force = DRM_FORCE_UNSPECIFIED; // force ? DRM_FORCE_ON : DRM_FORCE_UNSPECIFIED;
 	dw_hdmi_update_power(hdmi);
 	dw_hdmi_update_phy_mask(hdmi);
 	mutex_unlock(&hdmi->mutex);
--- a/drivers/gpu/drm/sun4i/sun4i_drv.c
+++ b/drivers/gpu/drm/sun4i/sun4i_drv.c
@@ -112,6 +112,7 @@
 	}
 
 	drm_mode_config_init(drm);
+	drm->mode_config.allow_fb_modifiers = true; // DIRK:
 
 	ret = component_bind_all(drm->dev, drm);
 	if (ret) {
--- a/drivers/gpu/drm/drm_probe_helper.c
+++ b/drivers/gpu/drm/drm_probe_helper.c
@@ -404,6 +404,8 @@
 
 	DRM_DEBUG_KMS("[CONNECTOR:%d:%s]\n", connector->base.id,
 			connector->name);
+	//DIRK:
+	connector->force = DRM_FORCE_ON;
 
 retry:
 	ret = drm_modeset_lock(&dev->mode_config.connection_mutex, &ctx);
