--- a/arch/arm/boot/dts/sun8i-h3.dtsi
+++ b/arch/arm/boot/dts/sun8i-h3.dtsi
@@ -47,28 +47,34 @@
 		#address-cells = <1>;
 		#size-cells = <0>;
 
-		cpu@0 {
-			compatible = "arm,cortex-a7";
+		cpu0: cpu@0 {
+			compatible = "allwinner,sun8i-h3";
 			device_type = "cpu";
 			reg = <0>;
+			clocks = <&ccu CLK_CPUX>;
+			clock-latency = <244144>; /* 8 32k periods */
+			clock-frequency = <1200000000>;
 		};
 
 		cpu@1 {
-			compatible = "arm,cortex-a7";
+			compatible = "allwinner,sun8i-h3";
 			device_type = "cpu";
 			reg = <1>;
+			clock-frequency = <1200000000>;
 		};
 
 		cpu@2 {
-			compatible = "arm,cortex-a7";
+			compatible = "allwinner,sun8i-h3";
 			device_type = "cpu";
 			reg = <2>;
+			clock-frequency = <1200000000>;
 		};
 
 		cpu@3 {
-			compatible = "arm,cortex-a7";
+			compatible = "allwinner,sun8i-h3";
 			device_type = "cpu";
 			reg = <3>;
+			clock-frequency = <1200000000>;
 		};
 	};

--- /dev/null
+++ b/arch/arm/boot/dts/sun8i-h3-rervision.dtsi
@@ -0,0 +1,250 @@
+/*
+ * Copyright (C) 2019 Dirk Chang <dirk@kooiot.com>
+ *
+ * This file is dual-licensed: you can use it either under the terms
+ * of the GPL or the X11 license, at your option. Note that this dual
+ * licensing only applies to this file, and not this project as a
+ * whole.
+ *
+ *  a) This file is free software; you can redistribute it and/or
+ *     modify it under the terms of the GNU General Public License as
+ *     published by the Free Software Foundation; either version 2 of the
+ *     License, or (at your option) any later version.
+ *
+ *     This file is distributed in the hope that it will be useful,
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ * Or, alternatively,
+ *
+ *  b) Permission is hereby granted, free of charge, to any person
+ *     obtaining a copy of this software and associated documentation
+ *     files (the "Software"), to deal in the Software without
+ *     restriction, including without limitation the rights to use,
+ *     copy, modify, merge, publish, distribute, sublicense, and/or
+ *     sell copies of the Software, and to permit persons to whom the
+ *     Software is furnished to do so, subject to the following
+ *     conditions:
+ *
+ *     The above copyright notice and this permission notice shall be
+ *     included in all copies or substantial portions of the Software.
+ *
+ *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+ *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ *     OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+/dts-v1/;
+#include "sun8i-h3.dtsi"
+#include "sunxi-common-regulators.dtsi"
+
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/thermal/thermal.h>
+
+/ {
+	aliases {
+		serial0 = &uart0;
+	};
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <&leds_rer>, <&pwr_rer>;
+
+		status {
+			label = "kooiot:green:status";
+			gpios = <&pio 0 6 GPIO_ACTIVE_HIGH>;
+			linux,default-trigger = "heartbeat";
+		};
+		bs {
+			label = "kooiot:green:bs";
+			gpios = <&pio 0 17 GPIO_ACTIVE_HIGH>;
+			default-state = "off";
+		};
+		gs {
+			label = "kooiot:green:gs";
+			gpios = <&pio 0 19 GPIO_ACTIVE_HIGH>;
+			default-state = "off";
+		};
+		pppd {
+			label = "kooiot:green:pppd";
+			gpios = <&pio 0 18 GPIO_ACTIVE_HIGH>;
+			default-state = "off";
+		};
+		cloud {
+			label = "kooiot:green:cloud";
+			gpios = <&pio 0 21 GPIO_ACTIVE_HIGH>;
+			default-state = "off";
+		};
+
+		eth_reset {
+			label = "kooiot:red:eth_reset";
+			gpios = <&pio 0 20 GPIO_ACTIVE_HIGH>;
+			default-state = "off";
+		};
+		pcie_reset {
+			label = "kooiot:red:pcie_reset";
+			gpios = <&pio 0 9 GPIO_ACTIVE_HIGH>;
+			default-state = "off";
+		};
+		pcie_pwr {
+			label = "kooiot:blue:pcie_pwr";
+			gpios = <&pio 0 8 GPIO_ACTIVE_LOW>;
+			default-state = "on";
+		};
+	};
+
+	gpio_keys {
+		compatible = "gpio-keys";
+		pinctrl-names = "default";
+		pinctrl-0 = <&keys_rer>;
+
+		reset {
+			label = "reset";
+			linux,code = <KEY_RESTART>;
+			gpios = <&pio 0 10 GPIO_ACTIVE_LOW>;
+		};
+		dc_pwr {
+			label = "reset";
+			linux,code = <BTN_0>;
+			gpios = <&pio 0 7 GPIO_ACTIVE_LOW>;
+		};
+	};
+
+	vdd_cpux: gpio-regulator {
+		compatible = "regulator-gpio";
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&vdd_cpux_r_opc>;
+
+		regulator-name = "vdd-cpux";
+		regulator-type = "voltage";
+		regulator-boot-on;
+		regulator-always-on;
+		regulator-min-microvolt = <1100000>;
+		regulator-max-microvolt = <1300000>;
+		regulator-ramp-delay = <50>; /* 4ms */
+
+		gpios = <&r_pio 0 6 GPIO_ACTIVE_HIGH>;
+		gpios-states = <0x1>;
+		states = <1100000 0x0
+			  1300000 0x1>;
+	};
+};
+
+&cpu0 {
+	operating-points = <
+		1008000	1300000
+		816000	1100000
+		624000	1100000
+		480000	1100000
+		312000	1100000
+		240000	1100000
+		120000	1100000
+		>;
+	#cooling-cells = <2>;
+	cooling-min-level = <0>;
+	cooling-max-level = <6>;
+	cpu0-supply = <&vdd_cpux>;
+};
+
+&cpu_thermal {
+	trips {
+		cpu_warm: cpu_warm {
+			temperature = <65000>;
+			hysteresis = <2000>;
+			type = "passive";
+		};
+		cpu_hot: cpu_hot {
+			temperature = <75000>;
+			hysteresis = <2000>;
+			type = "passive";
+		};
+		cpu_very_hot: cpu_very_hot {
+			temperature = <90000>;
+			hysteresis = <2000>;
+			type = "passive";
+		};
+		cpu_crit: cpu_crit {
+			temperature = <105000>;
+			hysteresis = <2000>;
+			type = "critical";
+		};
+	};
+
+	cooling-maps {
+		cpu_warm_limit_cpu {
+			trip = <&cpu_warm>;
+			cooling-device = <&cpu0 THERMAL_NO_LIMIT 1>;
+		};
+		cpu_hot_limit_cpu {
+			trip = <&cpu_hot>;
+			cooling-device = <&cpu0 2 3>;
+		};
+		cpu_very_hot_limit_cpu {
+			trip = <&cpu_very_hot>;
+			cooling-device = <&cpu0 5 THERMAL_NO_LIMIT>;
+		};
+	};
+};
+
+&ehci3 {
+	status = "okay";
+};
+
+&mmc0 {
+	bus-width = <4>;
+	cd-gpios = <&pio 5 6 GPIO_ACTIVE_HIGH>;
+	cd-inverted;
+	pinctrl-names = "default";
+	pinctrl-0 = <&mmc0_pins_a>, <&mmc0_cd_pin>;
+	status = "okay";
+	vmmc-supply = <&reg_vcc3v3>;
+};
+
+&ohci3 {
+	status = "okay";
+};
+
+&pio {
+	leds_rer: led_pins@0 {
+		pins = "PA6", "PA17", "PA18", "PA19", "PA21";
+		function = "gpio_out";
+	};
+	keys_rer: key_pins@0 {
+		pins = "PA7", "PA10";
+		function = "gpio_in";
+	};
+	pwr_rer: led_pins@0 {
+		pins = "PA8", "PA9", "PA20";
+		function = "gpio_out";
+	};
+};
+
+&r_pio {
+	vdd_cpux_r_opc: regulator_pins@0 {
+		pins = "PL6";
+		function = "gpio_out";
+	};
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_pins_a>;
+	status = "okay";
+};
+
+&usbphy {
+	status = "okay";
+};

