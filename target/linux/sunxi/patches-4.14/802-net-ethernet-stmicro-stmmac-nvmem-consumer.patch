967142cf31f8b20eeec2d5633eeb29ad9104c4ccommit 967142cf31f8b20eeec2d5633eeb29ad9104c4c3
Author: Roman Ber√°nek <roman.beranek@prusa3d.com>
Date:   Fri Nov 16 02:19:25 2018 +0100

    net: stmmac: enable MAC address to be read from a nvmem cell as is described in Documentation/devicetree/bindings/net/ethernet.txt

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
index 72da77b94ecd..8a7b804528ef 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
@@ -25,6 +25,7 @@
 #include <linux/of_net.h>
 #include <linux/of_device.h>
 #include <linux/of_mdio.h>
+#include <linux/nvmem-consumer.h>
 
 #include "stmmac.h"
 #include "stmmac_platform.h"
@@ -375,6 +376,22 @@ static int stmmac_dt_phy(struct plat_stmmacenet_data *plat,
 	return 0;
 }
 
+static void *stmmac_get_nvmem_address(struct device *dev)
+{
+	struct nvmem_cell *cell;
+	size_t cell_size;
+	char *mac;
+
+	cell = nvmem_cell_get(dev, "mac-address");
+	if (IS_ERR(cell))
+		return NULL;
+
+        mac = nvmem_cell_read(cell, &cell_size);
+        nvmem_cell_put(cell);
+
+        return mac;
+}
+
 /**
  * stmmac_probe_config_dt - parse device-tree driver parameters
  * @pdev: platform_device structure
@@ -389,13 +406,21 @@ stmmac_probe_config_dt(struct platform_device *pdev, const char **mac)
 	struct device_node *np = pdev->dev.of_node;
 	struct plat_stmmacenet_data *plat;
 	struct stmmac_dma_cfg *dma_cfg;
+	const u8 *mac_addr;
 	int rc;
 
 	plat = devm_kzalloc(&pdev->dev, sizeof(*plat), GFP_KERNEL);
 	if (!plat)
 		return ERR_PTR(-ENOMEM);
 
+	/* U-boot passes a MAC address it found/generated for the
+	   interface as a "local-mac-address" attribute in the dt
+	   node. Here it is received.
+	*/
 	*mac = of_get_mac_address(np);

+		mac_addr = stmmac_get_nvmem_address(&pdev->dev);
+		if (mac_addr && is_valid_ether_addr(mac_addr))
+			*mac = mac_addr;

plat->interface = of_get_phy_mode(np);
 
 	/* Get max speed of operation from device tree */
