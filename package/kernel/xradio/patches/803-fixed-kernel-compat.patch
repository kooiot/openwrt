--- a/tx.c
+++ b/tx.c
@@ -1268,7 +1268,7 @@ void xradio_skb_dtor(struct xradio_commo
 				txpriv->raw_link_id, txpriv->tid);
 		tx_policy_put(hw_priv, txpriv->rate_id);
 	}
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 6, 0))
 	ieee80211_tx_status_skb(hw_priv->hw, skb);
 #else
 	ieee80211_tx_status(hw_priv->hw, skb)
--- a/sta.h
+++ b/sta.h
@@ -31,7 +31,11 @@
 /* mac80211 API								*/
 
 int xradio_start(struct ieee80211_hw *dev);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 6, 54))
+void xradio_stop(struct ieee80211_hw *dev, bool suspend);
+#else
 void xradio_stop(struct ieee80211_hw *dev);
+#endif
 int xradio_add_interface(struct ieee80211_hw *dev, struct ieee80211_vif *vif);
 void xradio_remove_interface(struct ieee80211_hw *dev, struct ieee80211_vif *vif);
 int xradio_change_interface(struct ieee80211_hw *dev,
--- a/sta.c
+++ b/sta.c
@@ -117,7 +117,11 @@ out:
 	return ret;
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 6, 54))
+void xradio_stop(struct ieee80211_hw *dev, bool suspend)
+#else
 void xradio_stop(struct ieee80211_hw *dev)
+#endif
 {
 	struct xradio_common *hw_priv = dev->priv;
 	struct xradio_vif *priv = NULL;
--- a/ap.h
+++ b/ap.h
@@ -29,7 +29,7 @@ int xradio_sta_remove(struct ieee80211_h
 void xradio_sta_notify(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
 		       enum sta_notify_cmd notify_cmd,
 		       struct ieee80211_sta *sta);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 void xradio_bss_info_changed(struct ieee80211_hw *dev,
 			     struct ieee80211_vif *vif,
 			     struct ieee80211_bss_conf *info,
--- a/ap.c
+++ b/ap.c
@@ -213,7 +213,7 @@ static int xradio_set_tim_impl(struct xr
 	ap_printk(XRADIO_DBG_MSG, "%s mcast: %s.\n", __func__, 
 	          aid0_bit_set ? "ena" : "dis");
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 	skb = ieee80211_beacon_get_tim(priv->hw, priv->vif, &tim_offset, &tim_length, 0);
 #else
 	skb = ieee80211_beacon_get_tim(priv->hw, priv->vif, &tim_offset, &tim_length);
@@ -353,7 +354,7 @@ static int xradio_set_btcoexinfo(struct
 	return ret;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 void xradio_bss_info_changed(struct ieee80211_hw *dev,
 			     struct ieee80211_vif *vif,
 			     struct ieee80211_bss_conf *info,
@@ -367,7 +367,7 @@ void xradio_bss_info_changed(struct ieee
 {
 	struct xradio_common *hw_priv = dev->priv;
 	struct xradio_vif *priv = xrwl_get_vif_from_ieee80211(vif);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 	struct ieee80211_vif_cfg *cfg = &vif->cfg;
 #else
 	struct ieee80211_bss_conf *cfg = info;
@@ -483,7 +483,7 @@ void xradio_bss_info_changed(struct ieee
 				/* TODO:COMBO:Change this once
 				* mac80211 changes are available */
 				BUG_ON(!hw_priv->channel);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)) || defined(BUILD_OPENWRT)
 				hw_priv->ht_oper.ht_cap = sta->deflink.ht_cap;
 				priv->bss_params.operationalRateSet =__cpu_to_le32(
 				  xradio_rate_mask_to_wsm(hw_priv, sta->deflink.supp_rates[hw_priv->channel->band]));
@@ -982,7 +982,7 @@ static int xradio_upload_beacon(struct x
 	if (priv->vif->p2p || hw_priv->channel->band == NL80211_BAND_5GHZ)
 		frame.rate = WSM_TRANSMIT_RATE_6;
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 	frame.skb = ieee80211_beacon_get(priv->hw, priv->vif, 0);
 #else
 	frame.skb = ieee80211_beacon_get(priv->hw, priv->vif);
@@ -1145,7 +1145,7 @@ static int xradio_upload_null(struct xra
 		.rate = 0xFF,
 	};
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)) || defined(BUILD_OPENWRT)
 	frame.skb = ieee80211_nullfunc_get(priv->hw, priv->vif, 0, false);
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 17))
 	frame.skb = ieee80211_nullfunc_get(priv->hw, priv->vif, false);
@@ -1592,7 +1592,7 @@ void xradio_ht_oper_update_work(struct w
 		.count = 1,
 	};
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 	skb = ieee80211_beacon_get(priv->hw, priv->vif, 0);
 #else
 	skb = ieee80211_beacon_get(priv->hw, priv->vif);
--- a/sta.h
+++ b/sta.h
@@ -51,7 +51,7 @@ void xradio_configure_filter(struct ieee
                              unsigned int changed_flags,
                              unsigned int *total_flags,
                              u64 multicast);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 int xradio_conf_tx(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
                    unsigned int link_id, u16 queue,
 		   const struct ieee80211_tx_queue_params *params);
--- a/sta.c
+++ b/sta.c
@@ -674,7 +674,7 @@ void xradio_configure_filter(struct ieee
 	}
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)) || defined(BUILD_OPENWRT)
 int xradio_conf_tx(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
                    unsigned int link_id, u16 queue,
 		   const struct ieee80211_tx_queue_params *params)
--- a/sdio.c
+++ b/sdio.c
@@ -208,7 +208,7 @@ static void sdio_remove(struct sdio_func
 	xradio_core_deinit(func);
 	sdio_claim_host(func);
 	sdio_disable_func(func);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)) || defined(BUILD_OPENWRT)
 	mmc_hw_reset(card);
 #else
 	mmc_hw_reset(card->host);
