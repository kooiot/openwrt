--- a/tx.c
+++ b/tx.c
@@ -1268,7 +1268,7 @@ void xradio_skb_dtor(struct xradio_commo
 				txpriv->raw_link_id, txpriv->tid);
 		tx_policy_put(hw_priv, txpriv->rate_id);
 	}
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 7, 0)) || defined(BUILD_OPENWRT)
 	ieee80211_tx_status_skb(hw_priv->hw, skb);
 #else
 	ieee80211_tx_status(hw_priv->hw, skb);
--- a/sta.h
+++ b/sta.h
@@ -31,7 +31,7 @@
 /* mac80211 API								*/

 int xradio_start(struct ieee80211_hw *dev);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0)) || defined(BUILD_OPENWRT)
 void xradio_stop(struct ieee80211_hw *dev, bool suspend);
 #else
 void xradio_stop(struct ieee80211_hw *dev);
--- a/sta.c
+++ b/sta.c
@@ -117,7 +117,7 @@ out:
 	return ret;
 }

-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0)) || defined(BUILD_OPENWRT)
 void xradio_stop(struct ieee80211_hw *dev, bool suspend)
 #else
 void xradio_stop(struct ieee80211_hw *dev)
--- a/main.c
+++ b/main.c
@@ -167,7 +167,7 @@ static const struct ieee80211_ops xradio
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 2, 0))
 	.wake_tx_queue		= ieee80211_handle_wake_tx_queue,
 #endif
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0))
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)) || defined(BUILD_OPENWRT)
        .add_chanctx = ieee80211_emulate_add_chanctx,
        .remove_chanctx = ieee80211_emulate_remove_chanctx,
        .change_chanctx = ieee80211_emulate_change_chanctx,
