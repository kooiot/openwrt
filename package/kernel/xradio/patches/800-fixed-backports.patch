--- a/ap.h
+++ b/ap.h
@@ -29,17 +29,10 @@
 void xradio_sta_notify(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
 		       enum sta_notify_cmd notify_cmd,
 		       struct ieee80211_sta *sta);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 void xradio_bss_info_changed(struct ieee80211_hw *dev,
 			     struct ieee80211_vif *vif,
 			     struct ieee80211_bss_conf *info,
 			     u64 changed);
-#else
-void xradio_bss_info_changed(struct ieee80211_hw *dev,
-			     struct ieee80211_vif *vif,
-			     struct ieee80211_bss_conf *info,
-			     u32 changed);
-#endif
 int xradio_ampdu_action(struct ieee80211_hw *hw,
 			struct ieee80211_vif *vif,
 			struct ieee80211_ampdu_params *params);
--- a/ap.c
+++ b/ap.c
@@ -353,25 +353,14 @@
 	return ret;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 void xradio_bss_info_changed(struct ieee80211_hw *dev,
 			     struct ieee80211_vif *vif,
 			     struct ieee80211_bss_conf *info,
 			     u64 changed)
-#else
-void xradio_bss_info_changed(struct ieee80211_hw *dev,
-			     struct ieee80211_vif *vif,
-			     struct ieee80211_bss_conf *info,
-			     u32 changed)
-#endif
 {
 	struct xradio_common *hw_priv = dev->priv;
 	struct xradio_vif *priv = xrwl_get_vif_from_ieee80211(vif);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 	struct ieee80211_vif_cfg *cfg = &vif->cfg;
-#else
-	struct ieee80211_bss_conf *cfg = info;
-#endif
 
 	mutex_lock(&hw_priv->conf_mutex);
 	if (changed & BSS_CHANGED_BSSID) {
--- a/main.c
+++ b/main.c
@@ -502,12 +502,7 @@
 	int if_id;
 	struct ieee80211_hw *dev;
 	struct xradio_common *hw_priv;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 0)
 	unsigned char addr[ETH_ALEN];
-#else
-	unsigned char randomaddr[ETH_ALEN];
-	const unsigned char *addr = NULL;
-#endif
 
 	//init xradio_common
 	dev = xradio_init_common(sizeof(struct xradio_common));
@@ -520,7 +515,6 @@
 	hw_priv->sdio_func = func;
 	sdio_set_drvdata(func, hw_priv);
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 0)
 	// fill in mac addresses
 	if (hw_priv->pdev->of_node) {
 		err = of_get_mac_address(hw_priv->pdev->of_node, addr);
@@ -529,17 +523,6 @@
 		dev_warn(hw_priv->pdev, "no mac address provided, using random\n");
 		eth_random_addr(addr);
 	}
-#else
-	// fill in mac addresses
-	if (hw_priv->pdev->of_node) {
-		addr = of_get_mac_address(hw_priv->pdev->of_node);
-	}
-	if (!addr) {
-		dev_warn(hw_priv->pdev, "no mac address provided, using random\n");
-		eth_random_addr(randomaddr);
-		addr = randomaddr;
-	}
-#endif
 
 	memcpy(hw_priv->addresses[0].addr, addr, ETH_ALEN);
 	memcpy(hw_priv->addresses[1].addr, addr, ETH_ALEN);
--- a/sta.h
+++ b/sta.h
@@ -47,14 +47,9 @@
                              unsigned int changed_flags,
                              unsigned int *total_flags,
                              u64 multicast);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 int xradio_conf_tx(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
                    unsigned int link_id, u16 queue,
 		   const struct ieee80211_tx_queue_params *params);
-#else
-int xradio_conf_tx(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
-                   u16 queue, const struct ieee80211_tx_queue_params *params);
-#endif
 int xradio_get_stats(struct ieee80211_hw *dev,
                      struct ieee80211_low_level_stats *stats);
 /* Not more a part of interface?
--- a/sta.c
+++ b/sta.c
@@ -670,14 +670,9 @@
 	}
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 int xradio_conf_tx(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
                    unsigned int link_id, u16 queue,
 		   const struct ieee80211_tx_queue_params *params)
-#else
-int xradio_conf_tx(struct ieee80211_hw *dev, struct ieee80211_vif *vif,
-                   u16 queue, const struct ieee80211_tx_queue_params *params)
-#endif
 {
 	struct xradio_common *hw_priv = dev->priv;
 	struct xradio_vif *priv = xrwl_get_vif_from_ieee80211(vif);
--- a/ap.c
+++ b/ap.c
@@ -213,11 +213,7 @@
 	ap_printk(XRADIO_DBG_MSG, "%s mcast: %s.\n", __func__, 
 	          aid0_bit_set ? "ena" : "dis");
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 	skb = ieee80211_beacon_get_tim(priv->hw, priv->vif, &tim_offset, &tim_length, 0);
-#else
-	skb = ieee80211_beacon_get_tim(priv->hw, priv->vif, &tim_offset, &tim_length);
-#endif
 	if (!skb) {
 		__xradio_flush(hw_priv, true, priv->if_id);
 		return -ENOENT;
@@ -971,11 +967,7 @@
 	if (priv->vif->p2p || hw_priv->channel->band == NL80211_BAND_5GHZ)
 		frame.rate = WSM_TRANSMIT_RATE_6;
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 	frame.skb = ieee80211_beacon_get(priv->hw, priv->vif, 0);
-#else
-	frame.skb = ieee80211_beacon_get(priv->hw, priv->vif);
-#endif
 	if (WARN_ON(!frame.skb))
 		return -ENOMEM;
 
@@ -1246,11 +1238,7 @@
 
 #ifndef HIDDEN_SSID
 	/* Get SSID */
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 	skb = ieee80211_beacon_get(priv->hw, priv->vif, 0);
-#else
-	skb = ieee80211_beacon_get(priv->hw, priv->vif);
-#endif
 	if (WARN_ON(!skb)) {
 		ap_printk(XRADIO_DBG_ERROR,"%s, ieee80211_beacon_get failed\n", __func__);
 		return -ENOMEM;
--- a/ap.c
+++ b/ap.c
@@ -468,15 +468,9 @@
 				/* TODO:COMBO:Change this once
 				* mac80211 changes are available */
 				BUG_ON(!hw_priv->channel);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0))
 				hw_priv->ht_oper.ht_cap = sta->deflink.ht_cap;
 				priv->bss_params.operationalRateSet =__cpu_to_le32(
 				  xradio_rate_mask_to_wsm(hw_priv, sta->deflink.supp_rates[hw_priv->channel->band]));
-#else
-				hw_priv->ht_oper.ht_cap = sta->ht_cap;
-				priv->bss_params.operationalRateSet =__cpu_to_le32(
-				  xradio_rate_mask_to_wsm(hw_priv, sta->supp_rates[hw_priv->channel->band]));
-#endif
 				/* TODO by Icenowy: I think this may lead to some problems. */
 //				hw_priv->ht_oper.channel_type   = info->channel_type;
 				hw_priv->ht_oper.operation_mode = info->ht_operation_mode;
@@ -1126,7 +1120,7 @@
 		.rate = 0xFF,
 	};
 
-	frame.skb = ieee80211_nullfunc_get(priv->hw, priv->vif, false);
+	frame.skb = ieee80211_nullfunc_get(priv->hw, priv->vif, -1, false);
 
 	if (WARN_ON(!frame.skb))
 		return -ENOMEM;
@@ -1558,11 +1558,7 @@
 		.count = 1,
 	};
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 	skb = ieee80211_beacon_get(priv->hw, priv->vif, 0);
-#else
-	skb = ieee80211_beacon_get(priv->hw, priv->vif);
-#endif
 	if (WARN_ON(!skb))
 		return;
 
--- a/sdio.c
+++ b/sdio.c
@@ -196,11 +196,7 @@
 	xradio_core_deinit(func);
 	sdio_claim_host(func);
 	sdio_disable_func(func);
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0))
 	mmc_hw_reset(card);
-#else
-	mmc_hw_reset(card->host);
-#endif
 	sdio_release_host(func);
 }
 
